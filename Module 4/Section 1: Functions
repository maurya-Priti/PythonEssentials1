Functions

A good, attentive developer divides the code (or more accurately: the problem) into well-isolated pieces, and encodes each of them in the form of a function.


decompose the problem to allow the product to be implemented as a set of separately written functions packed together in different modules.

This is what the simplest function definition looks like:

def function_name():
    function_body
 
It always starts with the keyword def (for define)
next after def goes the name of the function (the rules for naming functions are exactly the same as for naming variables)
after the function name, there's a place for a pair of parentheses (they contain nothing here, but that will change soon)
the line has to be ended with a colon;
the line directly after def begins the function body ‒ a couple (at least one) of necessarily nested instructions, which will be executed every time the function is invoked; note: the function ends where the nesting ends, so you have to be careful.



1. A function is a block of code that performs a specific task when the function is called (invoked). You can use functions to make your code reusable, better organized, and more readable. Functions can have parameters and return values.

2. There are at least four basic types of functions in Python:

built-in functions which are an integral part of Python (such as the print() function). You can see a complete list of built-in Python functions at https://docs.python.org/3/library/functions.html.
the ones that come from pre-installed modules (you'll learn about them in the Python Essentials 2 course)
user-defined functions which are written by users for users ‒ you can write your own functions and use them freely in your code,
the lambda functions (you'll learn about them in the Python Essentials 2 course.)
3. You can define your own function using the def keyword and the following syntax:

def your_function(optional parameters):
    # the body of the function
 
You can define a function which doesn't take any arguments, e.g.:


def message(): # defining a function
    print("Hello") # body of the function
 
message() # calling the function
 
You can define a function which takes arguments, too, just like the one-parameter function below:


def hello(name): # defining a function
    print("Hello,", name) # body of the function
 
 
name = input("Enter your name: ")
 
hello(name) # calling the function
